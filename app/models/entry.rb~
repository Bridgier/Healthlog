class Entry < ActiveRecord::Base
  belongs_to :user
  has_many :activities
  
  validates_uniqueness_of :entry_date, :message => "Only one log entry per day!"
  
  def self.fetchLogList(id)

    query = "select
                to_char(log_date, 'YYYY') as year,
                to_char(log_date, 'Month') as month,
                log_date,
                case
                    when log_entries.log_date is not null then true
                    else false
                end::boolean as exists
                from (select now()::date - generate_series(1, to_char((select now()::date - min(log_date) from log_entries), 'DD')::int +30) as log_date) as date_seq 
                     left outer join log_entries using (log_date)
                where user_id = %d or user_id is null" % id

    result = connection.execute(query) 

    logList = Hash.new(&(p=lambda{|h,k| h[k] = Hash.new(&p)}))

    result.each do |res|
      logList[res["year"]][res["month"]][res["log_date"]] = res["exists"]
    end

    logList
  end

end

